services:
  postgres:
    image: postgres:14
    container_name: achievement-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  init-db:
    profiles: [ "init" ]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: achievement-init
    command: python src/database/init_db.py
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: achievement-web
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: streamlit run src/main.py
    # volumes: # for debugging
    #   - ./src:/app/src

networks:
  default:
    name: achievement-network

volumes:
  postgres_data:
